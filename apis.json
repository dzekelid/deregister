{
	"name": "Streadata.io API Gallery - Deregister",
	"description": "This is a repository of deregister APIs, self-contained as a Github repository, with HTML and YAML representations of the APIs and their surrounding operations.",
	"image": "http://template.streamdata.gallery/assets/deregister.png",
	"created": "2018-02-24",
	"modified": "2018-08-27",
	"url": "http://deregister.streamdata.gallery/apis.json",
	"specificationVersion": "0.14",
	"apis": [
		{
			"name": "AWS EC2 Container Service",
			"x-api-slug": "aws-ec2-container-service",
			"description": "Amazon EC2 Container Service (ECS) is a highly scalable, high performance container management service that supports Docker containers and allows you to easily run applications on a managed cluster of Amazon EC2 instances. Amazon ECS eliminates the need for you to install, operate, and scale your own cluster management infrastructure. With simple API calls, you can launch and stop Docker-enabled applications, query the complete state of your cluster, and access many familiar features like security groups, Elastic Load Balancing, EBS volumes, and IAM roles. You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs and availability requirements. You can also integrate your own scheduler or third-party schedulers to meet business or application specific requirements.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonECS.png",
			"humanURL": "https://aws.amazon.com/ecs/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2-container-service/openapi.md"
				}
			]
		},
		{
			"name": "AWS Batch",
			"x-api-slug": "aws-batch",
			"description": "AWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS. AWS Batch dynamically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted. With AWS Batch, there is no need to install and manage batch computing software or server clusters that you use to run your jobs, allowing you to focus on analyzing results and solving problems. AWS Batch plans, schedules, and executes your batch computing workloads across the full range of AWS compute services and features, such as Amazon EC2 and Spot Instances.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/aws-batch.jpg",
			"humanURL": "https://aws.amazon.com/batch/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-batch/openapi.md"
				}
			]
		},
		{
			"name": "AWS CodeDeploy",
			"x-api-slug": "aws-codedeploy",
			"description": "AWS CodeDeploy is a service that automates code deployments to any instance, including Amazon EC2 instances and instances running on-premises. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications. You can use AWS CodeDeploy to automate software deployments, eliminating the need for error-prone manual operations, and the service scales with your infrastructure so you can easily deploy to one instance or thousands.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/aws-codedeploy.png",
			"humanURL": "https://aws.amazon.com/codedeploy/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-codedeploy/openapi.md"
				}
			]
		},
		{
			"name": "AWS EC2 Systems Manager",
			"x-api-slug": "aws-ec2-systems-manager",
			"description": "Amazon EC2 Systems Manager is a management service that helps you automatically collect software inventory, apply OS patches, create system images, and configure Windows and Linux operating systems. These capabilities help you define and track system configurations, prevent drift, and maintain software compliance of your EC2 and on-premises configurations. By providing a management approach that is designed for the scale and agility of the cloud but extends into your on-premises data center, EC2 Systems Manager makes it easier for you to seamlessly bridge your existing infrastructure with AWS.EC2 Systems Manager is easy to use. Simply access EC2 Systems Manager from the EC2 Management Console, select the instances you want to manage, and define the management tasks you want to perform. EC2 Systems Manager is available now at no cost to manage both your EC2 and on-premises resources.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonEC2.png",
			"humanURL": "https://aws.amazon.com/ec2/systems-manager/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2-systems-manager/openapi.md"
				}
			]
		},
		{
			"name": "AWS OpsWorks",
			"x-api-slug": "aws-opsworks",
			"description": "AWS OpsWorks is a configuration management service that uses Chef, an automation platform that treats server configurations as code. OpsWorks uses Chef to automate how servers are configured, deployed, and managed across your Amazon Elastic Compute Cloud (Amazon EC2) instances or on-premises compute environments. OpsWorks has two offerings, AWS Opsworks for Chef Automate, and AWS OpsWorks Stacks.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Management-Tools_AWSOpsWorks.png",
			"humanURL": "https://aws.amazon.com/opsworks/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-opsworks/openapi.md"
				}
			]
		},
		{
			"name": "AWS Directory Service",
			"x-api-slug": "aws-directory-service",
			"description": "AWS Directory Service for Microsoft Active Directory (Enterprise Edition), also known as AWS Microsoft AD, enables your directory-aware workloads and AWS resources to use managed Active Directory in the AWS Cloud. The Microsoft AD service is built on actual Microsoft Active Directory and does not require you to synchronize or replicate data from your existing Active Directory to the cloud. You can use standard Active Directory administration tools and take advantage of built-in Active Directory features such as Group Policy, trusts, and single sign-on. With Microsoft AD, you can easily joinAmazon EC2andAmazon RDS for SQL Serverinstances to a domain, and useAWS Enterprise IT applicationssuch asAmazon WorkSpaceswith Active Directory users and groups.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Security-Identity_AWSDirectoryService.png",
			"humanURL": "https://aws.amazon.com/directoryservice/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-directory-service/openapi.md"
				}
			]
		},
		{
			"name": "AWS EC2",
			"x-api-slug": "aws-ec2",
			"description": "Amazon Elastic Compute Cloud is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers. Amazon EC2s simple web service interface allows you to obtain and configure capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon&rsquo;s proven computing environment. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale capacity, both up and down, as your computing requirements change. Amazon EC2 changes the economics of computing by allowing you to pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate themselves from common failure scenarios.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonEC2.png",
			"humanURL": "https://aws.amazon.com/ec2/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2/openapi.md"
				}
			]
		},
		{
			"name": "AWS Elastic Load Balancing",
			"x-api-slug": "aws-elastic-load-balancing",
			"description": "Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances. It enables you to achieve fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to route application traffic.Elastic Load Balancing offers two types of load balancers that both feature high availability, automatic scaling, and robust security. These include theClassic Load Balancerthat routes traffic based on either application or network level information, and theApplication Load Balancerthat routes traffic based on advanced application level information that includes the content of the request. The Classic Load Balancer is ideal for simple load balancing of traffic across multiple EC2 instances, while the Application Load Balancer is ideal for applications needing advanced routing capabilities, microservices, and container-based architectures. Application Load Balancer offers ability to route traffic to multiple services or load balance across multiple ports on the same EC2 instance.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_ElasticLoadBalancing.png",
			"humanURL": "https://aws.amazon.com/elasticloadbalancing/",
			"baseURL": ":///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-elastic-load-balancing/openapi.md"
				}
			]
		},
		{
			"name": "Avaza",
			"x-api-slug": "avaza",
			"description": "Avaza is a beautiful online software suite with modules for Project Management, Timesheets, Expenses &amp; Invoicing. Access from anywhere, with any device. Avaza is the leading all-in-one software for running client focused businesses. Avaza allows businesses of all sizes to more easily and effectively manage team projects, time tracking, expense reporting, quoting &amp; invoicing. It can be accessed simply via a web browser from anywhere in the world on any device.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28373-avaza.jpg",
			"humanURL": "https://www.avaza.com",
			"baseURL": "https:///",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/avaza/openapi.md"
				}
			]
		},
		{
			"name": "Vinli",
			"x-api-slug": "vinli",
			"description": "Vinli - The easiest, most advanced connected-car system in the world. Vinli is a platform for easily and quickly building connected car apps. Apps get vehicle data through Vinli services.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28875-www-vin-li.jpg",
			"humanURL": "http://vinli.com",
			"baseURL": "https://events.vin.li//api/v1",
			"tags": "Deregister",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/vinli/openapi.md"
				}
			]
		}
	],
	"tags": "Deregister",
	"include": [
		{
			"name": "AWS EC2 Container Service",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2-container-service/apis.yaml"
		},
		{
			"name": "AWS Batch",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-batch/apis.yaml"
		},
		{
			"name": "AWS CodeDeploy",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-codedeploy/apis.yaml"
		},
		{
			"name": "AWS EC2 Systems Manager",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2-systems-manager/apis.yaml"
		},
		{
			"name": "AWS OpsWorks",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-opsworks/apis.yaml"
		},
		{
			"name": "AWS Directory Service",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-directory-service/apis.yaml"
		},
		{
			"name": "AWS EC2",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-ec2/apis.yaml"
		},
		{
			"name": "AWS Elastic Load Balancing",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/aws-elastic-load-balancing/apis.yaml"
		},
		{
			"name": "Avaza",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/avaza/apis.yaml"
		},
		{
			"name": "Vinli",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/deregister/master/_listings/vinli/apis.yaml"
		}
	]
}